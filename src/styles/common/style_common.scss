@import "mixins";
@import "animations";
@import "search";
@import "confirm";

html,
body {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding: 10px;
  margin: 0;
  padding: 0;
  max-width: 370px;
  min-width: 350px;
  width: auto;
  overflow: hidden;
  background-color: var(--color-background);
  

  font: caption;
  
  cursor: default;
  user-select: none;
  -moz-user-select: none;
}

body, input {
  font-size: $font-size; // snad 13px?
  font-weight: 400;
  font-family: $font-family;
  color: var(--color-font);
}

input {
  color: $search-input-color;
}

input:focus, textarea:focus, select:focus{
  outline: none;
}

.hidden, .d-none {
  display: none;
}

/* SCREEN
<main id="main-container">
  <div id="_screen_name_" class="screen">
   ... (screen containers)
  </div>
</main> 
*/
// .screen: #overview, #details, #latest, #search
.screen {
  top: 0;
  width: 100%;
  display: flex;
  flex-direction: column;
}

#main-container {
  left: 0px;
  position: relative;
  min-height: 300px;
  max-height: 600px;
  display: flex;
}

// Sliding (secondary) screens starting position
.screen-details, .screen-latest, .screen-search {
  box-sizing: border-box;
  position: absolute;
  height: 100%;

  // Sem musím přidat animaci a pak nebude potřeba ... slide-out-reverse? jenom oddělám slide-in?
  transform: translate(100%);
  // left: 200%;
  transition: transform 150ms cubic-bezier(.07, .95, 0, 1);
}

/**
  .screen | #_screen_name_ has two containers: .header-container and .body-container (.ul-container might not be used anymore)
*/
.body-container, 
.ul-container {
  // overflow-y: scroll;
  overflow-y: auto;
}

.body-container {
  display: flex;
  width: 100%;
  flex-direction: column;

  ul {
    list-style: none;
    margin-block-start: auto;
    margin-block-end: auto;
    padding-inline-start: initial;
  }
}

// HEADER
.header-container {
  // margin-top: 4px; // firefox-only
  padding-top: 4px; // chrome or both
  background-color: $header-container-bg;
}

#header {
  display: grid;
  grid-template-columns: 40px auto 40px;
  align-content: center;
  height: 30px;

  .header-title {
    justify-self: center;
    align-self: center;
    width: 100%;
  }
}

// Special case for header w/o back button (= overview)
#header.header-overview {
  grid-template-columns: auto 40px;

  .header-title {
    justify-self: initial;
  }
}

#header,
.header-overview-title {
  > span {
    padding: 4px 16px;
    height: 20px;
    display: inline-block;
    line-height: 20px;
  }
}

.header {
  &--details-title {
    justify-content: center;
    display: flex;
    align-items: center;
  }

  &--favicon {
    margin: 4px;
    margin-right: 8px;
  }
}

// Special item inside header; it acts like li, but is a part of header
#ten-unused {
  margin-top: 4px;

  display: flex;
  justify-content: space-between;
  align-items: center;

  width: 100%;
  padding: 4px 16px;
  box-sizing: border-box;

  > span {
    display: inline-block;
    line-height: 20px;
  }

  // Special item that acts like ordinary li
  &:hover {
    background-color: var(--color-link-hover);

    .count {
      color: $li-count-hover-color;
    }
  }
}

// Header buttons
@include header-buttons;

// Inactive button in search
#header .btn-inactive {
  opacity: 30%;

  &:hover, &:active {
    background-color: initial;
  }
}

.separator {
  border-bottom: 1px solid var(--color-separator);
  margin-bottom: 4px;
  margin-top: 4px;
}

.separator-bottom {
  margin-bottom: 0;
}

// ITEMS: (layout and overall properties)
li {
  display: flex;
  width: 100%;
  height: 20px;
  align-items: center;


  // Info on how many items are there in the category
  .count {
    flex-basis: auto;
    color: $li-count-color;
  }

  &:hover {
    background-color: var(--color-link-hover);
  
    .count {
      color: $li-count-hover-color;
    }
  }
}

li#nothing-to-show {
  height: auto;
  padding: 8px 12px;
  box-sizing: border-box;

  &:hover {
    background-color: transparent;
  }
}

// Items: content
.item {
  display: flex;
  width: 100%;
  padding: 4px 12px;
  box-sizing: border-box;
  justify-content: space-between;

  &-detail {
    height: 48px;
  }

  &-overview {
    height: 28px;
  }

  /* Items parts */
  &--favicon {
    margin-right: 12px;
  }

  &--text-container {
    min-width: 0;
    flex-basis: 100%;

    &-overview {
      display: flex;
      justify-content: space-between;
      padding-right: 4px;
    }
  }

  &--controls-container {
    min-width: 0;
    flex-shrink: 0;
    display: flex;
  }
}

.favicon {
  height: 16px;
  width: 16px;
  background-size: cover;
  flex-shrink: 0;
}

$containers-margin: ".url-container", ".main-item-text-container", ".item-container", ".item-controls-container";

@each $container in $containers-margin {
  #{$container} > div {
    margin-left: 4px;

    &:first-of-type {
      margin-left: 0;
    }
  }
}

// Title of item in detail
.title.detail {
  @include truncate-text;

  word-break: keep-all;
  margin-bottom: 2px;
}

// Overview & buttons
.url,
.last-displayed {
  @include truncate-text;

  &.detail {
    font-style: italic;
    word-break: keep-all;
  }
}

// Buttons on items
@include item-buttons;

.bookmark {
  &.bookmark-close {
    background-image: $bookmarkCloseIcon;
    background-size: $bookmark-close-size;
  }
  &.bookmarked {
    background-image: $bookmarkedIcon;
  }
}

// TODO
.go-back-button-ico {
  transform: rotate(180deg);
  color: rgb(133, 133, 230);
  height: 16px;
  width: 16px;
}
